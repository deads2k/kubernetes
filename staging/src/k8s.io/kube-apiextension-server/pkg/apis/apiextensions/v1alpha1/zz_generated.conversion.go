// +build !ignore_autogenerated

/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiextensions "k8s.io/kube-apiextension-server/pkg/apis/apiextensions"
	unsafe "unsafe"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_ThirdParty_To_apiextensions_ThirdParty,
		Convert_apiextensions_ThirdParty_To_v1alpha1_ThirdParty,
		Convert_v1alpha1_ThirdPartyCondition_To_apiextensions_ThirdPartyCondition,
		Convert_apiextensions_ThirdPartyCondition_To_v1alpha1_ThirdPartyCondition,
		Convert_v1alpha1_ThirdPartyList_To_apiextensions_ThirdPartyList,
		Convert_apiextensions_ThirdPartyList_To_v1alpha1_ThirdPartyList,
		Convert_v1alpha1_ThirdPartySpec_To_apiextensions_ThirdPartySpec,
		Convert_apiextensions_ThirdPartySpec_To_v1alpha1_ThirdPartySpec,
		Convert_v1alpha1_ThirdPartyStatus_To_apiextensions_ThirdPartyStatus,
		Convert_apiextensions_ThirdPartyStatus_To_v1alpha1_ThirdPartyStatus,
	)
}

func autoConvert_v1alpha1_ThirdParty_To_apiextensions_ThirdParty(in *ThirdParty, out *apiextensions.ThirdParty, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ThirdPartySpec_To_apiextensions_ThirdPartySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ThirdPartyStatus_To_apiextensions_ThirdPartyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_v1alpha1_ThirdParty_To_apiextensions_ThirdParty(in *ThirdParty, out *apiextensions.ThirdParty, s conversion.Scope) error {
	return autoConvert_v1alpha1_ThirdParty_To_apiextensions_ThirdParty(in, out, s)
}

func autoConvert_apiextensions_ThirdParty_To_v1alpha1_ThirdParty(in *apiextensions.ThirdParty, out *ThirdParty, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_apiextensions_ThirdPartySpec_To_v1alpha1_ThirdPartySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_apiextensions_ThirdPartyStatus_To_v1alpha1_ThirdPartyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_apiextensions_ThirdParty_To_v1alpha1_ThirdParty(in *apiextensions.ThirdParty, out *ThirdParty, s conversion.Scope) error {
	return autoConvert_apiextensions_ThirdParty_To_v1alpha1_ThirdParty(in, out, s)
}

func autoConvert_v1alpha1_ThirdPartyCondition_To_apiextensions_ThirdPartyCondition(in *ThirdPartyCondition, out *apiextensions.ThirdPartyCondition, s conversion.Scope) error {
	out.Type = apiextensions.ThirdPartyConditionType(in.Type)
	out.Status = apiextensions.ConditionStatus(in.Status)
	out.LastProbeTime = in.LastProbeTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

func Convert_v1alpha1_ThirdPartyCondition_To_apiextensions_ThirdPartyCondition(in *ThirdPartyCondition, out *apiextensions.ThirdPartyCondition, s conversion.Scope) error {
	return autoConvert_v1alpha1_ThirdPartyCondition_To_apiextensions_ThirdPartyCondition(in, out, s)
}

func autoConvert_apiextensions_ThirdPartyCondition_To_v1alpha1_ThirdPartyCondition(in *apiextensions.ThirdPartyCondition, out *ThirdPartyCondition, s conversion.Scope) error {
	out.Type = ThirdPartyConditionType(in.Type)
	out.Status = ConditionStatus(in.Status)
	out.LastProbeTime = in.LastProbeTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

func Convert_apiextensions_ThirdPartyCondition_To_v1alpha1_ThirdPartyCondition(in *apiextensions.ThirdPartyCondition, out *ThirdPartyCondition, s conversion.Scope) error {
	return autoConvert_apiextensions_ThirdPartyCondition_To_v1alpha1_ThirdPartyCondition(in, out, s)
}

func autoConvert_v1alpha1_ThirdPartyList_To_apiextensions_ThirdPartyList(in *ThirdPartyList, out *apiextensions.ThirdPartyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]apiextensions.ThirdParty)(unsafe.Pointer(&in.Items))
	return nil
}

func Convert_v1alpha1_ThirdPartyList_To_apiextensions_ThirdPartyList(in *ThirdPartyList, out *apiextensions.ThirdPartyList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ThirdPartyList_To_apiextensions_ThirdPartyList(in, out, s)
}

func autoConvert_apiextensions_ThirdPartyList_To_v1alpha1_ThirdPartyList(in *apiextensions.ThirdPartyList, out *ThirdPartyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items == nil {
		out.Items = make([]ThirdParty, 0)
	} else {
		out.Items = *(*[]ThirdParty)(unsafe.Pointer(&in.Items))
	}
	return nil
}

func Convert_apiextensions_ThirdPartyList_To_v1alpha1_ThirdPartyList(in *apiextensions.ThirdPartyList, out *ThirdPartyList, s conversion.Scope) error {
	return autoConvert_apiextensions_ThirdPartyList_To_v1alpha1_ThirdPartyList(in, out, s)
}

func autoConvert_v1alpha1_ThirdPartySpec_To_apiextensions_ThirdPartySpec(in *ThirdPartySpec, out *apiextensions.ThirdPartySpec, s conversion.Scope) error {
	out.Group = in.Group
	out.Version = in.Version
	out.Name = in.Name
	out.Singular = in.Singular
	out.ShortNames = *(*[]string)(unsafe.Pointer(&in.ShortNames))
	out.Kind = in.Kind
	out.ListKind = in.ListKind
	out.ClusterScoped = in.ClusterScoped
	return nil
}

func Convert_v1alpha1_ThirdPartySpec_To_apiextensions_ThirdPartySpec(in *ThirdPartySpec, out *apiextensions.ThirdPartySpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ThirdPartySpec_To_apiextensions_ThirdPartySpec(in, out, s)
}

func autoConvert_apiextensions_ThirdPartySpec_To_v1alpha1_ThirdPartySpec(in *apiextensions.ThirdPartySpec, out *ThirdPartySpec, s conversion.Scope) error {
	out.Group = in.Group
	out.Version = in.Version
	out.Name = in.Name
	out.Singular = in.Singular
	out.ShortNames = *(*[]string)(unsafe.Pointer(&in.ShortNames))
	out.Kind = in.Kind
	out.ListKind = in.ListKind
	out.ClusterScoped = in.ClusterScoped
	return nil
}

func Convert_apiextensions_ThirdPartySpec_To_v1alpha1_ThirdPartySpec(in *apiextensions.ThirdPartySpec, out *ThirdPartySpec, s conversion.Scope) error {
	return autoConvert_apiextensions_ThirdPartySpec_To_v1alpha1_ThirdPartySpec(in, out, s)
}

func autoConvert_v1alpha1_ThirdPartyStatus_To_apiextensions_ThirdPartyStatus(in *ThirdPartyStatus, out *apiextensions.ThirdPartyStatus, s conversion.Scope) error {
	out.Conditions = *(*[]apiextensions.ThirdPartyCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

func Convert_v1alpha1_ThirdPartyStatus_To_apiextensions_ThirdPartyStatus(in *ThirdPartyStatus, out *apiextensions.ThirdPartyStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ThirdPartyStatus_To_apiextensions_ThirdPartyStatus(in, out, s)
}

func autoConvert_apiextensions_ThirdPartyStatus_To_v1alpha1_ThirdPartyStatus(in *apiextensions.ThirdPartyStatus, out *ThirdPartyStatus, s conversion.Scope) error {
	if in.Conditions == nil {
		out.Conditions = make([]ThirdPartyCondition, 0)
	} else {
		out.Conditions = *(*[]ThirdPartyCondition)(unsafe.Pointer(&in.Conditions))
	}
	return nil
}

func Convert_apiextensions_ThirdPartyStatus_To_v1alpha1_ThirdPartyStatus(in *apiextensions.ThirdPartyStatus, out *ThirdPartyStatus, s conversion.Scope) error {
	return autoConvert_apiextensions_ThirdPartyStatus_To_v1alpha1_ThirdPartyStatus(in, out, s)
}
